#!/usr/bin/perl -w
#
# toggle-areas:
# At time of an election, switch off whole locale (e.g. Wales).
# Or "every district council except these 7". Can switch them
# back on as well.
#
# Copyright (c) 2007 UK Citizens Online Democracy. All rights reserved.
# Email: matthew@mysociety.org; WWW: http://www.mysociety.org/
#

my $rcsid = ''; $rcsid .= '$Id: toggle-areas,v 1.4 2009-06-04 14:37:12 francis Exp $';

use strict;
require 5.8.0;

# Horrible boilerplate to set up appropriate library paths.
use FindBin;
use lib "$FindBin::Bin/../perllib";
use lib "$FindBin::Bin/../commonlib/perllib";
use Getopt::Long;

use mySociety::Config;
BEGIN {
    mySociety::Config::set_file("$FindBin::Bin/../conf/general");
}
use mySociety::DaDem;
use mySociety::MaPit;

my $type = '';
my $country = '';
my $exceptions = '';
my $only = '';
my $status = '';
my $commit = 0;
unless (GetOptions(
    'type=s' => \$type,
    'country:s' => \$country,
    'exceptions:s' => \$exceptions,
    'only:s' => \$only,
    'commit' => \$commit,
    'status=s' => \$status)
    && $type =~ /^(COI|CTY|DIS|LAC|LBO|LGD|MTD|NIE|SPC|UTA|WAC|WMC)$/
    && $status =~ /^(pending|recent|boundary_changes|none)$/) {
    print <<EOF;
--type - Three-letter type to switch on/off. (Note that the code in write.php
     checks both the area and its parent, so often you could do either e.g.
     COI or COP, but for clarity use the ones in this list)
	 COI - Isles of Scilly
	 CTY - 27 county councils
	 DIS - 201 district councils
	 LAC - 14 London Assembly areas
	 LBO - 33 London boroughs (32 + City)
	 LGD - 26 NI Local Government Districts
	 MTD - 36 Metropolitan Districts
	 NIE - 18 Northern Ireland Assembly
	 SPC - 73 Scottish Parliament
	 UTA - 109 Unitary Authorities (55 E, 32 S, 22 W)
	 WAC - 40 Welsh Assembly
	 WMC - 650 MPs
--country - one letter if type is UTA, to turn off only Scotland or Wales.
--exceptions - names or area IDs, comma separated, to exempt.
--status should be pending, recent, boundary_changes, or none to turn them back on.
--commit - Actually update the live database.
EOF
    exit 1;
}

my %exceptions = map { $_ => 1 } split /,/, $exceptions;
$exceptions =~ s/,/|/g;
my %only = map { $_ => 1 } split /,/, $only;
$only =~ s/,/|/g;

$status .= '_election' if $status =~ /pending|recent/;

print "DRY RUN\n" unless $commit;

my $generation = mySociety::Config::get('MAPIT_GENERATION');
my $areas_info = mySociety::MaPit::call('areas', $type, $generation ? (generation => $generation) : ());
my $count = 0;
foreach (keys %$areas_info) {
    next if $exceptions{$_};
    my $name = $areas_info->{$_}->{name};
    next if $exceptions && ($exceptions{$name} || $name =~ /$exceptions/);
    next if $only && !$only{$_} && !$only{$name} && $name !~ /$only/;
    next if $type eq 'UTA' && $country && $country ne $areas_info->{$_}->{country};
    my $curr_status = mySociety::DaDem::get_area_status($_);
    next if $curr_status eq $status;
    print "Setting $_ ($name) to $status\n";
    mySociety::DaDem::admin_set_area_status($_, $status) if $commit;
    $count++;
}
print "\nMade $count changes\n";
